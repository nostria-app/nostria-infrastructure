##
## strfry relay config for Nostria VM deployment
##

# Directory that contains the strfry LMDB database (restart required)
db = "/var/lib/strfry/db"

dbParams {
    # Maximum number of threads/processes that can simultaneously have LMDB transactions open (restart required)
    maxreaders = 256

    # Size of mmap() to use when loading LMDB (default is 10TB, does *not* correspond to disk-space used) (restart required)
    mapsize = 10995116277760

    # Disables read-ahead when accessing the LMDB mapping. Reduces IO activity when DB size is larger than RAM. (restart required)
    noReadAhead = false
}

events {
    # Maximum size of normalised JSON, in bytes
    maxEventSize = 65536

    # Events newer than this will be rejected
    rejectEventsNewerThanSeconds = 900

    # Events older than this will be rejected
    rejectEventsOlderThanSeconds = 94608000

    # Ephemeral events older than this will be rejected
    rejectEphemeralEventsOlderThanSeconds = 60

    # Ephemeral events will be deleted from the DB when older than this
    ephemeralEventsLifetimeSeconds = 300

    # Maximum number of tags allowed
    maxNumTags = 2000

    # Maximum size for tag values, in bytes
    maxTagValSize = 1024
}

relay {
    # Interface to listen on. Use 127.0.0.1 to listen only on localhost (for reverse proxy)
    bind = "127.0.0.1"

    # Port to open for the nostr websocket protocol (restart required)
    port = 7777

    # Set OS-limit on maximum number of open files/sockets (if 0, don't attempt to set) (restart required)
    nofiles = 500000

    # HTTP header that contains the client's real IP, before reverse proxying (X-Forwarded-For, etc)
    realIpHeader = "X-Forwarded-For"

    info {
        # NIP-11: Name of this server. Short/descriptive (< 30 characters)
        name = "Nostria VM Relay"

        # NIP-11: Detailed plain-text description of relay
        description = "A high-performance Nostria relay running on dedicated VM infrastructure with strfry and Caddy. This relay provides reliable nostr event storage and forwarding for the Nostria network."

        # NIP-11: Administrative nostr pubkey, for contact purposes
        pubkey = "17e2889fba01021d048a13fd0ba108ad31c38326295460c21e69c43fa8fbe515"

        # NIP-11: Alternative contact
        contact = "mailto:admin@nostria.app"

        # NIP-11: List of supported NIPs
        supported_nips = [1, 2, 4, 9, 11, 15, 16, 20, 22, 28, 33, 40]

        # NIP-11: Software information
        software = "git+https://github.com/hoytech/strfry.git"
        version = "latest"

        # NIP-11: Relay limitations
        limitation {
            # Maximum number of concurrent connections
            max_ws_frame_size = 131072
            max_connections = 1000
            max_subscriptions = 20
            max_filters = 100
            max_limit = 5000
            max_subid_length = 100
            max_event_tags = 2000
            max_content_length = 8196
            min_pow_difficulty = 0
            auth_required = false
            payment_required = false
            restricted_writes = false
        }

        # NIP-11: Posting policy URL
        posting_policy = "https://nostria.app/posting-policy"

        # NIP-11: Fees (none for now)
        fees {
            admission = []
            subscription = []
            publication = []
        }
    }

    # Maximum number of websocket connections
    maxWebsocketConnections = 1000

    # Maximum length of per-connection write buffer, in bytes
    maxWebsocketSendBufferSize = 262144

    # Websocket compression is enabled by default; uncomment to disable
    # compression = false

    # Allow all IP addresses (since we're behind Caddy reverse proxy)
    # To restrict access, uncomment and configure:
    # allowedIps = ["0.0.0.0/0"]
}

# Path to custom plugin script (commented out for now)
# plugin = "/etc/strfry/plugins/nostria-policy.js"

# Enable built-in monitoring webserver (accessible via Caddy)
monitoring {
    bind = "127.0.0.1"
    port = 7778
}

# Event retention policy - customize based on relay requirements
retention = [
    # Keep the latest profile events (kind 0) for each pubkey
    {
        kinds = [0]
        count = 1
    },
    # Keep contact lists (kind 3) for each pubkey
    {
        kinds = [3]
        count = 1
    },
    # Keep text notes (kind 1) for 30 days
    {
        kinds = [1]
        time = 2592000  # 30 days
    },
    # Keep reactions (kind 7) for 7 days
    {
        kinds = [7]
        time = 604800   # 7 days
    },
    # Keep DMs (kind 4) for 90 days
    {
        kinds = [4]
        time = 7776000  # 90 days
    },
    # Keep deletions (kind 5) permanently
    {
        kinds = [5]
        time = 0        # permanent
    },
    # Keep reposts (kind 6) for 30 days
    {
        kinds = [6]
        time = 2592000  # 30 days
    },
    # Keep channel messages (kind 42) for 30 days
    {
        kinds = [42]
        time = 2592000  # 30 days
    },
    # Keep replaceable events (kinds 10000-19999) - latest version only
    {
        kinds = [10000, 10001, 10002]
        count = 1
    },
    # Keep ephemeral events (kinds 20000-29999) for 5 minutes only
    {
        kinds = [20000, 20001, 20002]
        time = 300      # 5 minutes
    },
    # Default retention for all other events: 7 days
    {
        time = 604800   # 7 days
    }
]

# Ingestion settings
ingestion {
    # Enable/disable event ingestion
    enabled = true
    
    # Maximum number of events to accept per second (rate limiting)
    # maxEventsPerSecond = 100
    
    # Reject events from relays that are known to be problematic
    # blockedRelays = []
    
    # Only accept events from specific relays (if configured)
    # allowedRelays = []
}

# Logging configuration
logging {
    # Log level: trace, debug, info, warn, error
    level = "info"
    
    # Enable structured logging
    structured = true
    
    # Log to file
    file = "/var/log/strfry/strfry.log"
    
    # Rotate log files
    rotate = true
    maxSize = "100MB"
    maxFiles = 10
}

# Performance tuning
performance {
    # Number of worker threads for processing events
    # (0 = auto-detect based on CPU cores)
    workerThreads = 0
    
    # Buffer size for event processing
    eventBufferSize = 1000
    
    # Enable memory-mapped I/O optimizations
    useMmap = true
    
    # Cache size for frequently accessed data
    cacheSize = "128MB"
}
